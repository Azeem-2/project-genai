services:
  postgres_db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=ziakhan
      - POSTGRES_PASSWORD=my_password
      - POSTGRES_DB=mydatabase
    ports:
      - '5433:5432'
    volumes:
      - postgres_db:/var/lib/postgresql/data
    networks:
      - default

  broker:
    image: apache/kafka:3.7.0
    hostname: broker
    ports:
      - '9092:9092'
      - '29093:29093'
      - '19092:19092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://broker:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'

  kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: 'Local Kafka Cluster'
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'broker:9092'
      DYNAMIC_CONFIG_ENABLED: "true"
    depends_on:
      - broker
    networks:
      - default

  inventory_service:
    extends:
      file: ./inventory_service/compose.yaml
      service: api
    volumes:
      - ./inventory_service/components:/components
    command: ["dapr", "run", 
              "--app-id", "inventory-service", 
              "--app-port", "8007", 
              "--dapr-http-port", "3507", 
              "--resources-path", "/components",
              "--", # Indicates the end of Dapr flags
              "poetry", "run", "uvicorn", "inventory_service.main:app", "--host", "0.0.0.0"] # Corrected command
    environment:
      DAPR_HTTP_PORT: 3507
    networks:
      - default

  notification_service:
    extends:
      file: ./notification_service/compose.yaml
      service: api
    volumes:
      - ./notification_service/components:/components
    command: ["dapr", "run", 
              "--app-id", "notification-service", 
              "--app-port", "8001", 
              "--dapr-http-port", "3501", 
              "--resources-path", "/components",
              "--", # Indicates the end of Dapr flags
              "poetry", "run", "uvicorn", "notification_service.main:app", "--host", "0.0.0.0"] # Corrected command
    environment:
      DAPR_HTTP_PORT: 3501
    networks:
      - default

  order_service:
    extends:
      file: ./order_service/compose.yaml
      service: api
    volumes:
      - ./order_service/components:/components
    command: ["dapr", "run", 
              "--app-id", "order-service", 
              "--app-port", "8002", 
              "--dapr-http-port", "3502", 
              "--resources-path", "/components",
              "--", # Indicates the end of Dapr flags
              "poetry", "run", "uvicorn", "order_service.main:app", "--host", "0.0.0.0"] # Corrected command
    environment:
      DAPR_HTTP_PORT: 3502
    networks:
      - default

  payment_service:
    extends:
      file: ./payment_service/compose.yaml
      service: api
    volumes:
      - ./payment_service/components:/components
    command: ["dapr", "run", 
              "--app-id", "payment-service", 
              "--app-port", "8003", 
              "--dapr-http-port", "3503", 
              "--resources-path", "/components",
              "--", # Indicates the end of Dapr flags
              "poetry", "run", "uvicorn", "payment_service.main:app", "--host", "0.0.0.0"] # Corrected command
    environment:
      DAPR_HTTP_PORT: 3503
    networks:
      - default

  product_service:
    extends:
      file: ./product_service/compose.yaml
      service: api
    volumes:
      - ./product_service/components:/components
    command: ["dapr", "run", 
              "--app-id", "product-service", 
              "--app-port", "8004", 
              "--dapr-http-port", "3504", 
              "--resources-path", "/components",
              "--", # Indicates the end of Dapr flags
              "poetry", "run", "uvicorn", "product_service.main:app", "--host", "0.0.0.0"] # Corrected command
    environment:
      DAPR_HTTP_PORT: 3504
    networks:
      - default

  user_service:
    extends:
      file: ./user_services/compose.yaml
      service: api
    volumes:
      - ./user_services/components:/components
    command: ["dapr", "run", 
              "--app-id", "user-service", 
              "--app-port", "8005", 
              "--dapr-http-port", "3505", 
              "--resources-path", "/components",
              "--", # Indicates the end of Dapr flags
              "poetry", "run", "uvicorn", "user_services.main:app", "--host", "0.0.0.0"] # Corrected command
    environment:
      DAPR_HTTP_PORT: 3505
    networks:
      - default

  kong:
    image: kong:latest
    environment:
      KONG_DATABASE: "off"
      KONG_PROXY_LISTEN: "0.0.0.0:8000, 0.0.0.0:8449 ssl"
      KONG_ADMIN_LISTEN: "0.0.0.0:8009, 0.0.0.0:8450 ssl"
      KONG_DECLARATIVE_CONFIG: "/usr/local/kong/declarative/kong.yml"
    ports:
      - "8000:8000"
      - "8449:8449"
      - "8009:8009"
      - "8450:8450"
    volumes:
      - ./config/kong.yml:/usr/local/kong/declarative/kong.yml:ro
    restart: always

volumes:
  postgres_db:
  kong-data:

networks:
  default:
    driver: bridge
