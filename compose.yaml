services:
  # Redefine the shared services
  postgres_db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=ziakhan
      - POSTGRES_PASSWORD=my_password
      - POSTGRES_DB=mydatabase
    ports:
      - '5433:5432'
    volumes:
      - postgres_db:/var/lib/postgresql/data
    networks:
      - default

  broker:
    image: apache/kafka:3.7.0
    hostname: broker
    ports:
      - '9092:9092'
      - '29093:29093'
      - '19092:19092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://broker:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'

  kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: 'Local Kafka Cluster'
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'broker:9092'
      DYNAMIC_CONFIG_ENABLED: "true"
    depends_on:
      - broker
    networks:
      - default

  # Extend services from internal compose.yaml files
  inventory_service:
    extends:
      file: ./inventory_service/compose.yaml
      service: api

  notification_service:
    extends:
      file: ./notification_service/compose.yaml
      service: api

  order_service:
    extends:
      file: ./order_service/compose.yaml
      service: api

  payment_service:
    extends:
      file: ./payment_service/compose.yaml
      service: api

  product_service:
    extends:
      file: ./product_service/compose.yaml
      service: api

  user_service:
    extends:
      file: ./user_services/compose.yaml
      service: api

  # Kong Database
  kong-db:
    image: postgres:13
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kongpassword
    volumes:
      - kong-data:/var/lib/postgresql/data

  # Kong Migrations
  kong-migrations:
    image: kong:latest
    command: kong migrations bootstrap
    depends_on:
      - kong-db
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpassword
      KONG_PG_DATABASE: kong

  # Kong Gateway
  kong:
    image: kong:latest
    depends_on:
      - kong-migrations
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpassword
      KONG_PG_DATABASE: kong
      KONG_PROXY_LISTEN: "0.0.0.0:8008, 0.0.0.0:8449 ssl" # Updated port
      KONG_ADMIN_LISTEN: "0.0.0.0:8009, 0.0.0.0:8450 ssl" # Updated port
    ports:
      - "8008:8008"
      - "8449:8449"
      - "8009:8009"
      - "8450:8450"
    volumes:
      - ./kong/kong.yml:/usr/local/kong/declarative/kong.yml
    restart: always

volumes:
  postgres_db:
  kong-data:

networks:
  default:
    driver: bridge
